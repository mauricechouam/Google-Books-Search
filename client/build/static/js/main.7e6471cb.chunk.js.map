{"version":3,"sources":["components/Nav/index.js","utils/API.js","components/Grid/index.js","components/Thumbnail/index.js","components/SaveBtn/index.js","components/DeleteBtn/index.js","components/List/index.js","components/Input/index.js","pages/Search.js","pages/Saved.js","components/Jumbotron/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","className","to","window","location","pathname","query","axios","get","bookData","post","id","delete","Container","fluid","children","Row","Col","size","split","map","join","Thumbnail","src","role","aria-label","style","backgroundImage","SaveBtn","type","onClick","useState","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","DeleteBtn","BookList","BookListItem","props","key","image","title","authors","flat","description","rel","target","href","link","event","API","then","res","loadBooks","console","log","catch","err","Input","SearchButton","Search","state","books","bookSearch","handleInputChange","name","value","setState","handleFormSubmit","preventDefault","data","items","this","onChange","placeholder","book","volumeInfo","infoLink","undefined","imageLinks","thumbnail","Component","Save","savedBooks","_id","Jumbotron","App","exact","path","component","Saved","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e6471cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Nav() {\n    return (\n        <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n                <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n                    Google Books\n            </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link\n                    to=\"/search\"\n                    className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\n                >\n                    Search\n            </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link\n                    to=\"/saved\"\n                    className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                >\n                    Saved\n            </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default Nav;","import axios from \"axios\";\n// endpoint from googlebooks api\nconst BaseUrl = \"https://www.googleapis.com/books/v1/volumes?q=\"\n\nexport default {\n    // calls googlbooks api and retrieve books based on user input\n    searchBooks: (query) => axios.get(BaseUrl + query),\n    // get all books saved in db\n    getBooks: () => axios.get(\"/api/books\"),\n    // saves a book to the db\n    saveBook: (bookData) => axios.post(\"/api/books\", bookData),\n    // deletes a book with the given id\n    deleteBook: (id) => axios.delete(\"api/books/\" + id)\n};","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n    return (\n        <div\n            className={size\n                .split(\" \")\n                .map(size => \"col-\" + size)\n                .join(\" \")}\n        >\n            {children}\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// The Thumbnail component renders a div that uses some CSS to render a background image\n// It will always keep square proportions at any size without the image warping\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\nfunction Thumbnail({ src }) {\n    return (\n        <div\n            className=\"thumbnail\"\n            role=\"img\"\n            aria-label=\"Book Image\"\n            style={{\n                backgroundImage: `url(${src})`\n            }}\n        />\n    );\n}\n\nexport default Thumbnail;\n","// need useState to maintain state in functional component\nimport React, { useState } from \"react\";\n// used for saving book modal\nimport { Modal, Button } from \"react-bootstrap\";\n\n// Using React Hooks here to maintain state in a functional component\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction SaveBtn({ type = \"default\", className, children, onClick }) {\n\n    const [show, setShow] = useState(false);\n\n    // handles closing of modal\n    const handleClose = () => setShow(false);\n    // handles showing of modal\n    const handleShow = () => setShow(true);\n\n    // saves book to db and shows modal\n    const click = () => {\n        handleShow()\n        onClick()\n    };\n\n    return (\n        <>\n            <button onClick={click} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n                {children}\n            </button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>You're book has been saved!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>You can view your saved books in the Saved tab!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        OK\n            </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default SaveBtn;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction DeleteBtn({ type = \"default\", className, children, onClick }) {\n    return (\n        <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n            {children}\n        </button>\n    );\n}\n\nexport default DeleteBtn;","import React from \"react\";\nimport Thumbnail from \"../Thumbnail\";\nimport { Container, Row, Col } from \"../Grid\";\nimport SaveBtn from \"../SaveBtn\";\nimport API from \"../../utils/API\";\nimport DeleteBtn from \"../DeleteBtn\"\nimport \"./style.css\"\n\n// BookList renders a bootstrap list item\nexport function BookList({ children }) {\n    return <ul className=\"list-group\">{children}</ul>;\n};\n\n// component to render each book\nexport function BookListItem(props) {\n\n    // function to handle saving book to db when save button is clicked\n    const handleSaveBtn = event => {\n\n        API.saveBook({\n            title: props.title,\n            authors: props.authors,\n            description: props.description,\n            image: props.image,\n            link: props.link\n        }).then(\n            res => console.log(res)\n        )\n            .catch(\n                err => console.log(err)\n            )\n    };\n\n    // function to handle deleting book from db when delete button is clicked\n    const handleDeleteBtn = event => {\n        API.deleteBook(props.id)\n            .then(\n                res => {\n                    // use loadBooks prop from Saved page component\n                    props.loadBooks()\n                    console.log(props.id)\n                }\n            )\n            .catch(err => console.log(err))\n    };\n\n    return (\n        <li className=\"list-group-item\" key={props.id}>\n            <Container>\n                <Row>\n                    <Col size=\"xs-4 sm-2\">\n                        <Thumbnail src={props.image} />\n                    </Col>\n                    <Col size=\"xs-8 sm-10\">\n                        <h3>{props.title}</h3>\n                        <p>\n                            Written By {[props.authors].flat().join(\", \")}\n                        </p>\n                        <p>\n                            {props.description}\n                        </p>\n                        <a\n                            rel=\"noreferrer noopener\"\n                            className=\"btn btn-lg btn-primary input-lg view\"\n                            target=\"_blank\"\n                            href={props.link}\n                        >\n                            View\n                        </a>\n                        {/* if there is an object id render the SaveBtn component else render the DeleteBtn component */}\n                        {!props.id ?\n                            <SaveBtn\n                                type=\"success\"\n                                className=\"input-lg\"\n                                onClick={handleSaveBtn}\n                            >\n                                Save\n                            </SaveBtn>\n                            :\n                            <DeleteBtn\n                                type=\"danger\"\n                                className=\"input-lg\"\n                                onClick={handleDeleteBtn}\n                            >\n                                Delete\n                            </DeleteBtn>\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        </li>\n    );\n};\n","import React from \"react\";\nimport \"./style.css\"\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nexport function Input(props) {\n    return (\n        <div className=\"input-group input-group-lg\">\n            <input className=\"form-control\" type=\"text\" {...props} />\n        </div>\n    );\n}\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nexport function SearchButton({ type = \"default\", className, children, onClick }) {\n    return (\n        <button onClick={onClick} className={[\"search btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n            {children}\n        </button>\n    );\n}\n\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { BookList, BookListItem } from \"../components/List\";\nimport { Input, SearchButton } from \"../components/Input\";\n\nclass Search extends Component {\n\n    // instatiate state for list of books retrieved from googlebooks api and bookSearch value\n    state = {\n        books: [],\n        bookSearch: \"\"\n    };\n\n    handleInputChange = event => {\n        // Destructure the name and value properties off of event.target\n        // Update the appropriate state\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    };\n\n    handleFormSubmit = event => {\n        // When the form is submitted, prevent its default behavior, get book update the books state\n        event.preventDefault();\n\n        // calls googlebooks api and returns searched book when search button is clicked\n        API.searchBooks(this.state.bookSearch)\n            .then(res => {\n                this.setState({ books: res.data.items }, function () {\n                    console.log(this.state.books);\n                })\n            })\n            .catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <form>\n                                <Container>\n                                    <Row>\n                                        <Col size=\"xs-12 sm-12\">\n                                            <Input\n                                                name=\"bookSearch\"\n                                                value={this.state.bookSearch}\n                                                onChange={this.handleInputChange}\n                                                placeholder=\"Search for a Book\"\n                                            />\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col size=\"xs-12 sm-12\">\n                                            <SearchButton\n                                                onClick={this.handleFormSubmit}\n                                                type=\"success\"\n                                                className=\"input-lg\"\n                                            >\n                                                Search\n                                            </SearchButton>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </form>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            <BookList>\n                                {this.state.books.map(book => {\n                                    return (\n                                        <BookListItem\n                                            key={book.id}\n                                            title={book.volumeInfo.title}\n                                            authors={book.volumeInfo.authors}\n                                            link={book.volumeInfo.infoLink}\n                                            description={book.volumeInfo.description}\n                                            // if no imageLinks then use placeholder image\n                                            image={book.volumeInfo.imageLinks === undefined ? \"http://siddallheatingandcooling.net/_imgstore/5/1360415/thumbnail/FSeY96wEdX_eY4XkBN2jfYnuY9A.png\" : `${book.volumeInfo.imageLinks.thumbnail}`}\n                                        />);\n                                })}\n                            </BookList>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    };\n\n};\n\nexport default Search;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { BookList, BookListItem } from \"../components/List\";\n\nclass Save extends Component {\n\n    // instantiate state for saved books\n    state = {\n        savedBooks: []\n    };\n\n    // loads saved books when Saved page loads\n    componentDidMount() {\n        this.loadBooks();\n    };\n\n    // loads books from database\n    loadBooks = event => {\n\n        API.getBooks()\n            .then(res => {\n                this.setState({ savedBooks: res.data }, function () {\n                    console.log(this.state.savedBooks);\n                })\n            })\n            .catch(err => console.log(err))\n    };\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            <BookList>\n                                {this.state.savedBooks.map(book => {\n                                    return (\n                                        <BookListItem\n                                            key={book._id}\n                                            title={book.title}\n                                            authors={book.authors}\n                                            link={book.link}\n                                            description={book.description}\n                                            image={book.image}\n                                            id={book._id}\n                                            loadBooks={this.loadBooks}\n                                        />\n                                    );\n                                })}\n                            </BookList>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    };\n\n};\n\nexport default Save;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron text-center\">\n            <h1>(React) Google Books Search</h1>\n            <h3>Search for and Save Books of Interest</h3>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\"\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Jumbotron from \"./components/Jumbotron\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Jumbotron />\n          <Switch>\n            {/* renders the Search page when \"/\" route is hit */}\n            <Route exact path=\"/\" component={Search} />\n            {/* renders the Search page when \"/search\" route is hit */}\n            <Route exact path=\"/search\" component={Search} />\n            {/* renders the Saved page when \"/saved\" route is hit */}\n            <Route exact path=\"/saved\" component={Saved} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}